"use strict";
const generateResolveFilter = (globals) => {
    const moduleNames = Object.keys(globals);
    return new RegExp(`^(${moduleNames.join("|")})$`);
};
const generateExport = (globals, name) => {
    const match = Object.entries(globals).find(([pattern]) => {
        return new RegExp(`^${pattern}$`).test(name);
    });
    if (match) {
        const output = typeof match[1] === "function" ? match[1](name) : match[1];
        return output ? `module.exports = ${output}` : undefined;
    }
};
const pluginGlobals = (globals = {}) => {
    const filter = generateResolveFilter(globals);
    return {
        name: "globals",
        setup(build) {
            build.onResolve({ filter }, (args) => {
                return { path: args.path, namespace: "globals" };
            });
            build.onLoad({ filter: /.*/, namespace: "globals" }, (args) => {
                const name = args.path;
                const contents = generateExport(globals, name);
                if (contents) {
                    return { contents };
                }
                return null;
            });
        },
    };
};
module.exports = pluginGlobals;
